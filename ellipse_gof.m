function [e_gof]=ellipse_gof(G,x,y)
% INPUTS 
% x is the x value of the countour
% Y is the y value of the contour
% G is a formated matrix G. generated by fit ellipse 
% OUTPUT 
% e_gof is the mean error % 
% 
% Written by DRB (NCSU) 
% Modified July 2010 to use polyxploy 
%
%


c=1; 
[XE,YE]=return_pts_ellipse([G.X0_in,G.Y0_in],[G.a,G.b],[], -G.phi);  % YE and XE are best fitting ellipse
for ang=0:10:350 % for each angle  
    xang=G.X0_in+(0.75*G.long_axis*cosd(ang));   
    yang=G.Y0_in+(0.75*G.long_axis*sind(ang));  % these are the radial lines 
    
   [ix,iy]=polyxpoly(XE,YE,[G.X0_in, xang],[G.Y0_in,yang]); % this is the intersection with best fit ellipse
   [ix2,iy2]=polyxpoly(x,y,[G.X0_in, xang],[G.Y0_in,yang]); % this is the intersection with the contour 
   if isempty(ix2)
     ix2=G.X0_in; iy2=G.Y0_in;
   end
ix=ix(1); iy=iy(1); 
   dv=sqrt((ix-ix2).^2+(iy-iy2).^2); % this is the distance offset between the points on the ellipse and the contour
   edv(c)=max(dv)/mean([G.a,G.b]); % this is the percentage error 
%%%%%%
% plot(XE,YE,'m')
% plot(ix,iy,'b.')
% plot(ix2,iy2,'r.')
% plot([G.X0_in, xang],[G.Y0_in,yang],'k')
% plot(G.X0_in,G.Y0_in,'x') 
%%%%%%%
c=c+1; 
end

e_gof=mean(edv); 
